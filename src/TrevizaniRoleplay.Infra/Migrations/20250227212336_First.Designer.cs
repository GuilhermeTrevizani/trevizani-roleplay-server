// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrevizaniRoleplay.Infra.Data;

#nullable disable

namespace TrevizaniRoleplay.Infra.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250227212336_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.AdminObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("RotP")
                        .HasColumnType("float");

                    b.Property<float>("RotR")
                        .HasColumnType("float");

                    b.Property<float>("RotY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AdminObjects", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Animation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Dictionary")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("OnlyInVehicle")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Scenario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Animations", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Banishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("StaffUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StaffUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Banishments", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Blip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("Color")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<ushort>("Type")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Blips", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Body", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Model")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("MorgueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OutfitJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalizationJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceOfDeath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WoundsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Bodies", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.BodyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BodyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("BodyId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("BodiesItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AnnouncementLastUseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Badge")
                        .HasColumnType("int");

                    b.Property<int>("Bank")
                        .HasColumnType("int");

                    b.Property<int>("BankAccount")
                        .HasColumnType("int");

                    b.Property<bool>("Bleeding")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("BloodType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("CKAvaliation")
                        .HasColumnType("tinyint(1)");

                    b.Property<uint>("Cellphone")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("Connected")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ConnectedTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeathReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("DriverLicenseBlockedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DriverLicenseValidDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DrugEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DrugItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("EvaluatingStaffUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("EvaluatorStaffUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ExtraPayment")
                        .HasColumnType("int");

                    b.Property<string>("FactionFlagsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FactionRankId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InitialHelpHours")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JailFinalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Job")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("LastAccessDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastAccessIp")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<ulong>("Mask")
                        .HasColumnType("bigint unsigned");

                    b.Property<uint>("Model")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("NameChangeStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Outfit")
                        .HasColumnType("int");

                    b.Property<int>("OutfitOnDuty")
                        .HasColumnType("int");

                    b.Property<string>("OutfitsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OutfitsOnDutyJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalizationJSON")
                        .HasColumnType("longtext");

                    b.Property<byte>("PersonalizationStep")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid?>("PoliceOfficerBlockedDriverLicenseCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PoliceOfficerWeaponLicenseCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<byte>("Premium")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("PremiumValidDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RejectionReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("Sex")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ThresoldDeath")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("ThresoldDeathEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("WalkStyle")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("WeaponLicenseType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("WeaponLicenseValidDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WeaponsBodyJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("Wound")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("WoundsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DrugItemTemplateId");

                    b.HasIndex("EvaluatingStaffUserId");

                    b.HasIndex("EvaluatorStaffUserId");

                    b.HasIndex("FactionId");

                    b.HasIndex("FactionRankId");

                    b.HasIndex("PoliceOfficerBlockedDriverLicenseCharacterId");

                    b.HasIndex("PoliceOfficerWeaponLicenseCharacterId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CharacterItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<bool>("InUse")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("OnlyOnDuty")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("CharactersItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("BlipColor")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("BlipType")
                        .HasColumnType("smallint unsigned");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RentPaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Safe")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("WeekRentValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanyCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FlagsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompaniesCharacters", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CostPrice")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("CompaniesItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanySell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CostPrice")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int");

                    b.Property<Guid?>("SerialNumber")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("CompaniesSells", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanyTuningPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<float>("CostPercentagePrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("SellPercentagePrice")
                        .HasColumnType("float");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompaniesTuningPrices", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Confiscation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DescriptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("PoliceOfficerCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.ToTable("Confiscations", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ConfiscationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ConfiscationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ConfiscationId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("ConfiscationsItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CrackDen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CooldownDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CooldownHours")
                        .HasColumnType("int");

                    b.Property<int>("CooldownQuantityLimit")
                        .HasColumnType("int");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<int>("OnlinePoliceOfficers")
                        .HasColumnType("int");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("CrackDens", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CrackDenItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CrackDenId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CrackDenId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("CrackDensItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CrackDenSell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CrackDenId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CrackDenId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("CrackDensSells", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Crime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DriverLicensePoints")
                        .HasColumnType("int");

                    b.Property<int>("FineValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PrisonMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Crimes", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Dealership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("VehiclePosX")
                        .HasColumnType("float");

                    b.Property<float>("VehiclePosY")
                        .HasColumnType("float");

                    b.Property<float>("VehiclePosZ")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRotP")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRotR")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRotY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dealerships", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.DealershipVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DealershipId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealershipId");

                    b.ToTable("DealershipsVehicles", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Door", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<long>("Hash")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FactionId");

                    b.ToTable("Doors", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnimpostFXName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<float>("GarbageCollectorMultiplier")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("MinutesDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("ShakeGameplayCamIntensity")
                        .HasColumnType("float");

                    b.Property<string>("ShakeGameplayCamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("ThresoldDeath")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("TimecycModifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<float>("TruckerMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("Warn")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("Drugs", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.EmergencyCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<string>("PosLocation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("EmergencyCalls", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Faction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ChatColor")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Slots")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Factions", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<bool>("PropertyOrVehicle")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("SWAT")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UPR")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionsEquipmentss", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionEquipmentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FactionEquipmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("FactionEquipmentId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("FactionsEquipmentsItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionFrequency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionsFrequencies", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionRank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionsRanks", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionStorage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionsStorages", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionStorageItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FactionStorageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("FactionStorageId");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("FactionsStoragesItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUniform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutfitJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Sex")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionsUniforms", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionsUnits", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUnitCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionUnitId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionUnitId");

                    b.ToTable("FactionsUnitsCharacters", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FinancialTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("FinancialTransactions", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Fine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DescriptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DriverLicensePoints")
                        .HasColumnType("int");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PoliceOfficerCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.ToTable("Fines", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Fire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<float>("FireSpanDamage")
                        .HasColumnType("float");

                    b.Property<float>("FireSpanLife")
                        .HasColumnType("float");

                    b.Property<int>("MaxFireSpan")
                        .HasColumnType("int");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<float>("PositionNewFireSpan")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SecondsNewFireSpan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fires", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ForensicTest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.ToTable("ForensicTests", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ForensicTestItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ForensicTestId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("OriginConfiscationItemId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid?>("TargetConfiscationItemId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ForensicTestId");

                    b.HasIndex("OriginConfiscationItemId");

                    b.HasIndex("TargetConfiscationItemId");

                    b.ToTable("ForensicTestsItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Furniture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AudioOutput")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Door")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Subcategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TVTexture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("UseSlot")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Furnitures", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Graffiti", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("ColorA")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Font")
                        .HasColumnType("tinyint unsigned");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("RotP")
                        .HasColumnType("float");

                    b.Property<float>("RotR")
                        .HasColumnType("float");

                    b.Property<float>("RotY")
                        .HasColumnType("float");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Graffitis", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.HelpRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AnswerDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("StaffUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StaffUserId");

                    b.HasIndex("UserId");

                    b.ToTable("HelpRequests", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Info", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Image")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Infos", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("RotP")
                        .HasColumnType("float");

                    b.Property<float>("RotR")
                        .HasColumnType("float");

                    b.Property<float>("RotY")
                        .HasColumnType("float");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ItemTemplateId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ItemTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObjectModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Type")
                        .HasColumnType("int unsigned");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ItemsTemplates", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Jail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DescriptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PoliceOfficerCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.ToTable("Jails", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("BlipColor")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("BlipName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<uint>("BlipType")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("CharacterJob")
                        .HasColumnType("tinyint unsigned");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("VehicleRentModel")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<float>("VehicleRentPosX")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRentPosY")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRentPosZ")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRentRotP")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRentRotR")
                        .HasColumnType("float");

                    b.Property<float>("VehicleRentRotY")
                        .HasColumnType("float");

                    b.Property<int>("VehicleRentValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OriginCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("OriginIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OriginSocialClubName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("TargetCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TargetIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TargetSocialClubName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("OriginCharacterId");

                    b.HasIndex("TargetCharacterId");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Parameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AnnouncementValue")
                        .HasColumnType("int");

                    b.Property<string>("AudioRadioStationsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("BarberValue")
                        .HasColumnType("int");

                    b.Property<bool>("Blackout")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BodyPartsDamagesJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ClothesValue")
                        .HasColumnType("int");

                    b.Property<int>("CooldownDismantleHours")
                        .HasColumnType("int");

                    b.Property<int>("CooldownPropertyRobberyPropertyHours")
                        .HasColumnType("int");

                    b.Property<int>("CooldownPropertyRobberyRobberHours")
                        .HasColumnType("int");

                    b.Property<int>("DriverLicenseBuyValue")
                        .HasColumnType("int");

                    b.Property<int>("DriverLicenseRenewValue")
                        .HasColumnType("int");

                    b.Property<byte>("EndTimeCrackDen")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("ExtraPaymentGarbagemanValue")
                        .HasColumnType("int");

                    b.Property<int>("FirefightersBlockHeal")
                        .HasColumnType("int");

                    b.Property<string>("FishingItemsChanceJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FuelValue")
                        .HasColumnType("int");

                    b.Property<int>("HospitalValue")
                        .HasColumnType("int");

                    b.Property<string>("IPLsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InactivePropertiesDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("InitialTimeCrackDen")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("KeyValue")
                        .HasColumnType("int");

                    b.Property<int>("LockValue")
                        .HasColumnType("int");

                    b.Property<string>("MOTD")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxCharactersOnline")
                        .HasColumnType("int");

                    b.Property<int>("Paycheck")
                        .HasColumnType("int");

                    b.Property<int>("PlasticSurgeryValue")
                        .HasColumnType("int");

                    b.Property<int>("PoliceOfficersPropertyRobbery")
                        .HasColumnType("int");

                    b.Property<string>("PremiumItemsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PremiumPointPackagesJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("PrisonInsideDimension")
                        .HasColumnType("int unsigned");

                    b.Property<float>("PrisonInsidePosX")
                        .HasColumnType("float");

                    b.Property<float>("PrisonInsidePosY")
                        .HasColumnType("float");

                    b.Property<float>("PrisonInsidePosZ")
                        .HasColumnType("float");

                    b.Property<uint>("PrisonOutsideDimension")
                        .HasColumnType("int unsigned");

                    b.Property<float>("PrisonOutsidePosX")
                        .HasColumnType("float");

                    b.Property<float>("PrisonOutsidePosY")
                        .HasColumnType("float");

                    b.Property<float>("PrisonOutsidePosZ")
                        .HasColumnType("float");

                    b.Property<float>("PropertyProtectionLevelPercentageValue")
                        .HasColumnType("float");

                    b.Property<int>("PropertyRobberyConnectedTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TattooValue")
                        .HasColumnType("int");

                    b.Property<int>("UnemploymentAssistance")
                        .HasColumnType("int");

                    b.Property<int>("VehicleDismantlingMinutes")
                        .HasColumnType("int");

                    b.Property<string>("VehicleDismantlingPartsChanceJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("VehicleDismantlingPercentageValue")
                        .HasColumnType("float");

                    b.Property<int>("VehicleDismantlingSeizedDays")
                        .HasColumnType("int");

                    b.Property<float>("VehicleInsurancePercentage")
                        .HasColumnType("float");

                    b.Property<int>("WeaponLicenseMaxAmmo")
                        .HasColumnType("int");

                    b.Property<int>("WeaponLicenseMaxAttachment")
                        .HasColumnType("int");

                    b.Property<int>("WeaponLicenseMaxWeapon")
                        .HasColumnType("int");

                    b.Property<int>("WeaponLicenseMonths")
                        .HasColumnType("int");

                    b.Property<int>("WeaponLicensePurchaseDaysInterval")
                        .HasColumnType("int");

                    b.Property<string>("WeaponsInfosJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("WhoCanLogin")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Parameters", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Origin")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("PhonesCalls", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Blocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Favorite")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Origin")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PhonesContacts", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PhonesGroups", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneGroupUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Permission")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("PhoneGroupId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneGroupId");

                    b.ToTable("PhonesGroupsUsers", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float?>("LocationX")
                        .HasColumnType("float");

                    b.Property<float?>("LocationY")
                        .HasColumnType("float");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<uint?>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Origin")
                        .HasColumnType("int unsigned");

                    b.Property<Guid?>("PhoneGroupId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("PhoneGroupId");

                    b.ToTable("PhonesMessages", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneMessageRead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("PhoneMessageId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneMessageId");

                    b.ToTable("PhonesMessagesReads", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PhonesNumbers", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PremiumPointPurchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PreferenceId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetUserId");

                    b.HasIndex("UserId");

                    b.ToTable("PremiumPointPurchases", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<uint>("EntranceDimension")
                        .HasColumnType("int unsigned");

                    b.Property<float>("EntrancePosX")
                        .HasColumnType("float");

                    b.Property<float>("EntrancePosY")
                        .HasColumnType("float");

                    b.Property<float>("EntrancePosZ")
                        .HasColumnType("float");

                    b.Property<float>("EntranceRotP")
                        .HasColumnType("float");

                    b.Property<float>("EntranceRotR")
                        .HasColumnType("float");

                    b.Property<float>("EntranceRotY")
                        .HasColumnType("float");

                    b.Property<float>("ExitPosX")
                        .HasColumnType("float");

                    b.Property<float>("ExitPosY")
                        .HasColumnType("float");

                    b.Property<float>("ExitPosZ")
                        .HasColumnType("float");

                    b.Property<float>("ExitRotP")
                        .HasColumnType("float");

                    b.Property<float>("ExitRotR")
                        .HasColumnType("float");

                    b.Property<float>("ExitRotY")
                        .HasColumnType("float");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("Interior")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("LockNumber")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned");

                    b.Property<Guid?>("ParentPropertyId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("ProtectionLevel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RobberyCooldown")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RobberyValue")
                        .HasColumnType("int");

                    b.Property<byte?>("Time")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<byte?>("Weather")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FactionId");

                    b.HasIndex("ParentPropertyId");

                    b.ToTable("Properties", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PropertyEntrance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("EntrancePosX")
                        .HasColumnType("float");

                    b.Property<float>("EntrancePosY")
                        .HasColumnType("float");

                    b.Property<float>("EntrancePosZ")
                        .HasColumnType("float");

                    b.Property<float>("EntranceRotP")
                        .HasColumnType("float");

                    b.Property<float>("EntranceRotR")
                        .HasColumnType("float");

                    b.Property<float>("EntranceRotY")
                        .HasColumnType("float");

                    b.Property<float>("ExitPosX")
                        .HasColumnType("float");

                    b.Property<float>("ExitPosY")
                        .HasColumnType("float");

                    b.Property<float>("ExitPosZ")
                        .HasColumnType("float");

                    b.Property<float>("ExitRotP")
                        .HasColumnType("float");

                    b.Property<float>("ExitRotR")
                        .HasColumnType("float");

                    b.Property<float>("ExitRotY")
                        .HasColumnType("float");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertiesEntrances", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PropertyFurniture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Interior")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("RotP")
                        .HasColumnType("float");

                    b.Property<float>("RotR")
                        .HasColumnType("float");

                    b.Property<float>("RotY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertiesFurnitures", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PropertyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ItemTemplateId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertiesItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Punishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("StaffUserId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StaffUserId");

                    b.ToTable("Punishments", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.SeizedVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DescriptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PoliceOfficerCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.HasIndex("VehicleId");

                    b.ToTable("SeizedVehicles", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SocialClubName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Smuggler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AllowedCharactersJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("Cellphone")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CooldownDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CooldownMinutes")
                        .HasColumnType("int");

                    b.Property<int>("CooldownQuantityLimit")
                        .HasColumnType("int");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("RotP")
                        .HasColumnType("float");

                    b.Property<float>("RotR")
                        .HasColumnType("float");

                    b.Property<float>("RotY")
                        .HasColumnType("float");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Smugglers", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Spot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Spots", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.TruckerLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AllowedVehiclesJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeliveryValue")
                        .HasColumnType("int");

                    b.Property<int>("LoadWaitTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UnloadWaitTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TruckerLocations", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.TruckerLocationDelivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("TruckerLocationId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TruckerLocationId");

                    b.ToTable("TruckerLocationsDeliveries", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.UCPAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UCPActions", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.UCPActionExecuted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("UCPActionRegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UCPActionsExecuted", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AjailMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("AmbientSoundToggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AnnouncementToggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CharacterApplicationsQuantity")
                        .HasColumnType("int");

                    b.Property<int>("CharacterSlots")
                        .HasColumnType("int");

                    b.Property<string>("ChatBackgroundColor")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("ChatFontSize")
                        .HasColumnType("int");

                    b.Property<int>("ChatFontType")
                        .HasColumnType("int");

                    b.Property<int>("ChatLines")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CooldownDismantle")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DiscordBoosterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DiscordDisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DiscordUsername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DisplayResolution")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("ExtraInteriorFurnitureSlots")
                        .HasColumnType("int");

                    b.Property<int>("ExtraOutfitSlots")
                        .HasColumnType("int");

                    b.Property<bool>("FactionChatToggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FactionToggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FreezingTimePropertyEntrance")
                        .HasColumnType("int");

                    b.Property<int>("HelpRequestsAnswersQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastAccessIp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NameChanges")
                        .HasColumnType("int");

                    b.Property<int>("NumberChanges")
                        .HasColumnType("int");

                    b.Property<bool>("PMToggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PlateChanges")
                        .HasColumnType("int");

                    b.Property<byte>("Premium")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("PremiumPoints")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PremiumValidDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PropertyRobberyCooldown")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("ReceiveSMSDiscord")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterIp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("ShowNametagId")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowOwnNametag")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("Staff")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("StaffDutyTime")
                        .HasColumnType("int");

                    b.Property<string>("StaffFlagsJSON")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("TimeStampToggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("VehicleTagToggle")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("BodyHealth")
                        .HasColumnType("float");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("Color1B")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Color1G")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Color1R")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Color2B")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Color2G")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Color2R")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("DamagesJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<uint>("Dimension")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("Drift")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("EngineHealth")
                        .HasColumnType("float");

                    b.Property<string>("ExtrasJSON")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Fuel")
                        .HasColumnType("int");

                    b.Property<byte>("HeadlightColor")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("InsuranceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("LightsMultiplier")
                        .HasColumnType("float");

                    b.Property<byte>("Livery")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("LockNumber")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ModsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("NeonBack")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("NeonColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeonColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeonColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("NeonFront")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("NeonLeft")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("NeonRight")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NewPlate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<byte>("ProtectionLevel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("RotP")
                        .HasColumnType("float");

                    b.Property<float>("RotR")
                        .HasColumnType("float");

                    b.Property<float>("RotY")
                        .HasColumnType("float");

                    b.Property<DateTime?>("SeizedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("SeizedDismantling")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SeizedValue")
                        .HasColumnType("int");

                    b.Property<bool>("Sold")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("TireSmokeColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TireSmokeColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TireSmokeColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("WheelColor")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("WheelType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("WheelVariation")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("WindowTint")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("XMR")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.VehicleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Extra")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ItemTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Subtype")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTemplateId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehiclesItems", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Wanted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PoliceOfficerCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PoliceOfficerDeletedCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("WantedCharacterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("WantedVehicleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.HasIndex("PoliceOfficerDeletedCharacterId");

                    b.HasIndex("WantedCharacterId");

                    b.HasIndex("WantedVehicleId");

                    b.ToTable("Wanted", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.WeaponId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("WeaponsIds", (string)null);
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Banishment", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "StaffUser")
                        .WithMany()
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Character");

                    b.Navigation("StaffUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Body", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.BodyItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Body", "Body")
                        .WithMany("Items")
                        .HasForeignKey("BodyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Body");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Character", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "DrugItemTemplate")
                        .WithMany()
                        .HasForeignKey("DrugItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "EvaluatingStaffUser")
                        .WithMany()
                        .HasForeignKey("EvaluatingStaffUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "EvaluatorStaffUser")
                        .WithMany()
                        .HasForeignKey("EvaluatorStaffUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.FactionRank", "FactionRank")
                        .WithMany()
                        .HasForeignKey("FactionRankId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerBlockedDriverLicenseCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerBlockedDriverLicenseCharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerWeaponLicenseCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerWeaponLicenseCharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DrugItemTemplate");

                    b.Navigation("EvaluatingStaffUser");

                    b.Navigation("EvaluatorStaffUser");

                    b.Navigation("Faction");

                    b.Navigation("FactionRank");

                    b.Navigation("PoliceOfficerBlockedDriverLicenseCharacter");

                    b.Navigation("PoliceOfficerWeaponLicenseCharacter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CharacterItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Company", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany("Companies")
                        .HasForeignKey("CharacterId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanyCharacter", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Company", "Company")
                        .WithMany("Characters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanyItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Company", "Company")
                        .WithMany("Items")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanySell", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Company");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CompanyTuningPrice", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Company", "Company")
                        .WithMany("TuningPrices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Confiscation", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");

                    b.Navigation("PoliceOfficerCharacter");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ConfiscationItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Confiscation", "Confiscation")
                        .WithMany("Items")
                        .HasForeignKey("ConfiscationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Confiscation");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CrackDenItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.CrackDen", "CrackDen")
                        .WithMany()
                        .HasForeignKey("CrackDenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CrackDen");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.CrackDenSell", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.CrackDen", "CrackDen")
                        .WithMany()
                        .HasForeignKey("CrackDenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("CrackDen");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.DealershipVehicle", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Dealership", "Dealership")
                        .WithMany()
                        .HasForeignKey("DealershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealership");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Door", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Drug", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Faction", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithOne()
                        .HasForeignKey("TrevizaniRoleplay.Domain.Entities.Faction", "CharacterId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionEquipment", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionEquipmentItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.FactionEquipment", "FactionEquipment")
                        .WithMany("Items")
                        .HasForeignKey("FactionEquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FactionEquipment");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionFrequency", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionRank", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionStorage", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionStorageItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.FactionStorage", "FactionStorage")
                        .WithMany()
                        .HasForeignKey("FactionStorageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FactionStorage");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUniform", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUnit", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUnitCharacter", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.FactionUnit", "FactionUnit")
                        .WithMany("Characters")
                        .HasForeignKey("FactionUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("FactionUnit");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FinancialTransaction", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Fine", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");

                    b.Navigation("PoliceOfficerCharacter");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ForensicTest", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ForensicTestItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ForensicTest", "ForensicTest")
                        .WithMany("Items")
                        .HasForeignKey("ForensicTestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ConfiscationItem", "OriginConfiscationItem")
                        .WithMany()
                        .HasForeignKey("OriginConfiscationItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ConfiscationItem", "TargetConfiscationItem")
                        .WithMany()
                        .HasForeignKey("TargetConfiscationItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ForensicTest");

                    b.Navigation("OriginConfiscationItem");

                    b.Navigation("TargetConfiscationItem");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Graffiti", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.HelpRequest", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "StaffUser")
                        .WithMany()
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StaffUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Info", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Item", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Jail", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");

                    b.Navigation("PoliceOfficerCharacter");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Log", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "OriginCharacter")
                        .WithMany()
                        .HasForeignKey("OriginCharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "TargetCharacter")
                        .WithMany()
                        .HasForeignKey("TargetCharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OriginCharacter");

                    b.Navigation("TargetCharacter");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneGroupUser", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.PhoneGroup", "PhoneGroup")
                        .WithMany("Users")
                        .HasForeignKey("PhoneGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhoneGroup");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneMessage", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.PhoneGroup", "PhoneGroup")
                        .WithMany()
                        .HasForeignKey("PhoneGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PhoneGroup");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneMessageRead", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.PhoneMessage", "PhoneMessage")
                        .WithMany("Reads")
                        .HasForeignKey("PhoneMessageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhoneMessage");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PremiumPointPurchase", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "TargetUser")
                        .WithMany()
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TargetUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Property", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany("Properties")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Property", "ParentProperty")
                        .WithMany()
                        .HasForeignKey("ParentPropertyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Character");

                    b.Navigation("Company");

                    b.Navigation("Faction");

                    b.Navigation("ParentProperty");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PropertyEntrance", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Property", "Property")
                        .WithMany("Entrances")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PropertyFurniture", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Property", "Property")
                        .WithMany("Furnitures")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PropertyItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Property", "Property")
                        .WithMany("Items")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemTemplate");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Punishment", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "StaffUser")
                        .WithMany()
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("StaffUser");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.SeizedVehicle", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");

                    b.Navigation("PoliceOfficerCharacter");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Session", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany("Sessions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.TruckerLocationDelivery", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.TruckerLocation", "TruckerLocation")
                        .WithMany()
                        .HasForeignKey("TruckerLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TruckerLocation");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.UCPAction", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.UCPActionExecuted", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "Character")
                        .WithMany("Vehicles")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Character");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.VehicleItem", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Items")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemTemplate");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Wanted", b =>
                {
                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "PoliceOfficerDeletedCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerDeletedCharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Character", "WantedCharacter")
                        .WithMany()
                        .HasForeignKey("WantedCharacterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrevizaniRoleplay.Domain.Entities.Vehicle", "WantedVehicle")
                        .WithMany()
                        .HasForeignKey("WantedVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PoliceOfficerCharacter");

                    b.Navigation("PoliceOfficerDeletedCharacter");

                    b.Navigation("WantedCharacter");

                    b.Navigation("WantedVehicle");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Body", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Character", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Items");

                    b.Navigation("Properties");

                    b.Navigation("Sessions");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Company", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Items");

                    b.Navigation("TuningPrices");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Confiscation", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionEquipment", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.FactionUnit", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.ForensicTest", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneGroup", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.PhoneMessage", b =>
                {
                    b.Navigation("Reads");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Property", b =>
                {
                    b.Navigation("Entrances");

                    b.Navigation("Furnitures");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.User", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("TrevizaniRoleplay.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
